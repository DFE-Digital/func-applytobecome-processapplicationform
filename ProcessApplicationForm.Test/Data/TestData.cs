using System.Collections.Generic;
using AutoFixture;
using ProcessApplicationFormFunction.Database.Models;
using ProcessApplicationFormFunction.Extensions;

namespace ProcessApplicationForm.Test.Data;

public static class TestData
{
    private static readonly Fixture Fixture;
    
    static TestData()
    {
        Fixture = new Fixture();
    }
    
    public static StagingApplyingSchool StagingApplyingSchoolData => Fixture.Create<StagingApplyingSchool>() with
    {
        SchoolDeclarationBodyAgree = 907660000,
        SchoolDeclarationTeacherChair = 907660000,
        SchoolConversionTargetDateDifferent = 907660000,
        SchoolConversionChangeName = 907660000,
        SchoolAdInspectedButReportNotPublished = 907660000,
        SchoolLaReorganization = 907660000,
        SchoolLaClosurePlans = 907660000,
        SchoolPartOfFederation = 907660000,
        SchoolAddFurtherInformation = 907660000,
        SchoolAdSafeguarding = 907660000,
        SchoolSACREExemption = 907660000,
        SchoolSupportedFoundation = 907660000,
        SchoolAdEqualitiesImpactAssessment = 907660000,
        SchoolFinancialInvestigations = 907660000,
        SchoolFinancialInvestigationsTrustAware = 907660000,
        SchoolBuildLandSharedFacilities = 907660000,
        SchoolBuildLandWorksPlanned = 907660000,
        SchoolBuildLandGrants = 907660000,
        SchoolBuildLandPriorityBuildingProgramme = 907660000,
        SchoolBuildLandFutureProgramme = 907660000,
        SchoolBuildLandPFIScheme = 907660000,
        SchoolConsultationStakeholders = 907660000,
        SchoolPFYCapitalSurplusOrDeficit = 907660000,
        SchoolPFYRevenueSurplusOrDeficit = 907660000,
        SchoolCFYCapitalSurplusOrDeficit = 907660000,
        SchoolCFYRevenueSurplusOrDeficit = 907660000,
        SchoolNFYCapitalSurplusOrDeficit = 907660000,
        SchoolNFYRevenueSurplusOrDeficit = 907660000,
        SchoolSupportGrantFundsPaidTo = 907660000,
        SchoolConversionContactRole = 90760000
    };
    
    public static A2BApplicationApplyingSchool A2BApplyingSchoolData => new()
        {
            Name = StagingApplyingSchoolData.Name,
            SchoolAddFurtherInformation = StagingApplyingSchoolData.SchoolAddFurtherInformation.ConvertDynamicsIntBool(),
            SchoolAdEqualitiesImpactAssessment = StagingApplyingSchoolData.SchoolAdEqualitiesImpactAssessment.ConvertDynamicsIntBool(),
            SchoolAdEqualitiesImpactAssessmentDetails = StagingApplyingSchoolData.SchoolAdEqualitiesImpactAssessmentDetails,
            SchoolAdFeederSchools = StagingApplyingSchoolData.SchoolAdFeederSchools,
            SchoolAdInspectedButReportNotPublished = StagingApplyingSchoolData.SchoolAdInspectedButReportNotPublished.ConvertDynamicsIntBool(),
            SchoolAdInspectedReportNotPublishedExplain = StagingApplyingSchoolData.SchoolAdInspectedReportNotPublishedExplain,
            SchoolAdSafeguarding = StagingApplyingSchoolData.SchoolAdSafeguarding.ConvertDynamicsIntBool(),
            SchoolAdSafeguardingExplained = StagingApplyingSchoolData.SchoolAdSafeguardingExplained,
            SchoolAdSchoolContributionToTrust = StagingApplyingSchoolData.SchoolAdSchoolContributionToTrust,
            SchoolBuildLandFutureProgramme = StagingApplyingSchoolData.SchoolBuildLandFutureProgramme.ConvertDynamicsIntBool(),
            SchoolBuildLandGrants = StagingApplyingSchoolData.SchoolBuildLandGrants.ConvertDynamicsIntBool(),
            SchoolBuildLandGrantsBody = StagingApplyingSchoolData.SchoolBuildLandGrantsBody,
            SchoolBuildLandOwnerExplained = StagingApplyingSchoolData.SchoolBuildLandOwnerExplained,
            SchoolBuildLandPFIScheme = StagingApplyingSchoolData.SchoolBuildLandPFIScheme.ConvertDynamicsIntBool(),
            SchoolBuildLandPFISchemeType = StagingApplyingSchoolData.SchoolBuildLandPFISchemeType,
            SchoolBuildLandPriorityBuildingProgramme = StagingApplyingSchoolData.SchoolBuildLandPriorityBuildingProgramme.ConvertDynamicsIntBool(),
            SchoolBuildLandSharedFacilities = StagingApplyingSchoolData.SchoolBuildLandSharedFacilities.ConvertDynamicsIntBool(),
            SchoolBuildLandSharedFacilitiesExplained = StagingApplyingSchoolData.SchoolBuildLandSharedFacilitiesExplained,
            SchoolBuildLandWorksPlanned = StagingApplyingSchoolData.SchoolBuildLandWorksPlanned.ConvertDynamicsIntBool(),
            SchoolBuildLandWorksPlannedDate = StagingApplyingSchoolData.SchoolBuildLandWorksPlannedDate,
            SchoolBuildLandWorksPlannedExplained = StagingApplyingSchoolData.SchoolBuildLandWorksPlannedExplained,
            SchoolCapacityAssumptions = StagingApplyingSchoolData.SchoolCapacityAssumptions,
            SchoolCapacityPublishedAdmissionsNumber = StagingApplyingSchoolData.SchoolCapacityPublishedAdmissionsNumber.ToIntOrNull(),
            SchoolCapacityYear1 = StagingApplyingSchoolData.SchoolCapacityYear1,
            SchoolCapacityYear2 = StagingApplyingSchoolData.SchoolCapacityYear2,
            SchoolCapacityYear3 = StagingApplyingSchoolData.SchoolCapacityYear3,
            SchoolConsultationStakeholders = StagingApplyingSchoolData.SchoolConsultationStakeholders.ConvertDynamicsIntBool(),
            SchoolConsultationStakeholdersConsult = StagingApplyingSchoolData.SchoolConsultationStakeholdersConsult,
            SchoolConversionApproverContactEmail = StagingApplyingSchoolData.SchoolConversionApproverContactEmail,
            SchoolConversionApproverContactName = StagingApplyingSchoolData.SchoolConversionApproverContactName,
            SchoolConversionChangeName = StagingApplyingSchoolData.SchoolConversionChangeName.ConvertDynamicsIntBool(),
            SchoolConversionChangeNameValue = StagingApplyingSchoolData.SchoolConversionChangeNameValue,
            SchoolConversionContactChairEmail = StagingApplyingSchoolData.SchoolConversionContactChairEmail,
            SchoolConversionContactChairName = StagingApplyingSchoolData.SchoolConversionContactChairName,
            SchoolConversionContactChairTel = StagingApplyingSchoolData.SchoolConversionContactChairTel,
            SchoolConversionContactHeadEmail = StagingApplyingSchoolData.SchoolConversionContactChairEmail,
            SchoolConversionContactHeadName = StagingApplyingSchoolData.SchoolConversionContactHeadName,
            SchoolConversionContactHeadTel = StagingApplyingSchoolData.SchoolConversionContactChairTel,
            SchoolConversionContactRole = StagingApplyingSchoolData.SchoolConversionContactRole.ConvertApplicationRole(),
            SchoolConversionMainContactOtherRole = StagingApplyingSchoolData.SchoolConversionMainContactOtherRole,
            SchoolConversionMainContactOtherEmail = StagingApplyingSchoolData.SchoolConversionMainContactOtherEmail,
            SchoolConversionMainContactOtherName = StagingApplyingSchoolData.SchoolConversionMainContactOtherName,
            SchoolConversionMainContactOtherTelephone = StagingApplyingSchoolData.SchoolConversionMainContactOtherTelephone,
            SchoolConversionReasonsForJoining = StagingApplyingSchoolData.SchoolConversionReasonsForJoining,
            SchoolConversionTargetDateDifferent = StagingApplyingSchoolData.SchoolConversionTargetDateDifferent.ConvertDynamicsIntBool(),
            SchoolConversionTargetDateDate = StagingApplyingSchoolData.SchoolConversionTargetDateDate,
            SchoolConversionTargetDateExplained = StagingApplyingSchoolData.SchoolConversionTargetDateExplained,
            SchoolDeclarationBodyAgree = StagingApplyingSchoolData.SchoolDeclarationBodyAgree.ConvertDynamicsIntBool(),
            SchoolDeclarationSignedByEmail = StagingApplyingSchoolData.SchoolDeclarationSignedByEmail,
            SchoolDeclarationSignedById = StagingApplyingSchoolData.SchoolDeclarationSignedById,
            SchoolDeclarationSignedByName = StagingApplyingSchoolData.SchoolDeclarationSignedByName,
            SchoolDeclarationTeacherChair = StagingApplyingSchoolData.SchoolDeclarationTeacherChair.ConvertDynamicsIntBool(),
            SchoolFaithSchool = StagingApplyingSchoolData.SchoolFaithSchool.ConvertDynamicsIntBool(),
            SchoolFaithSchoolDioceseName = StagingApplyingSchoolData.SchoolFaithSchoolDioceseName,
            SchoolFinancialInvestigations = StagingApplyingSchoolData.SchoolFinancialInvestigations.ConvertDynamicsIntBool(),
            SchoolFinancialInvestigationsExplain = StagingApplyingSchoolData.SchoolFinancialInvestigationsExplain,
            SchoolFinancialInvestigationsTrustAware = StagingApplyingSchoolData.SchoolFinancialInvestigationsTrustAware.ConvertDynamicsIntBool(),
            SchoolFurtherInformation = StagingApplyingSchoolData.SchoolFurtherInformation,
            SchoolLaClosurePlans = StagingApplyingSchoolData.SchoolLaClosurePlans.ConvertDynamicsIntBool(),
            SchoolLaClosurePlansExplain = StagingApplyingSchoolData.SchoolLaClosurePlansExplain,
            SchoolLaReorganization = StagingApplyingSchoolData.SchoolLaReorganization.ConvertDynamicsIntBool(),
            SchoolLaReorganizationExplain = StagingApplyingSchoolData.SchoolLaReorganizationExplain,
            SchoolPFYCapitalForward = StagingApplyingSchoolData.SchoolPFYCapitalForward,
            SchoolPFYCapitalForwardStatusExplained = StagingApplyingSchoolData.SchoolPFYCapitalForwardStatusExplained,
            SchoolPFYCapitalIsDeficit = StagingApplyingSchoolData.SchoolPFYCapitalSurplusOrDeficit.ConvertSurplusOrDeficit(),
            SchoolPFYEndDate = StagingApplyingSchoolData.SchoolPFYEndDate,
            SchoolPFYRevenue = StagingApplyingSchoolData.SchoolPFYRevenue,
            SchoolPFYRevenueIsDeficit = StagingApplyingSchoolData.SchoolPFYRevenueSurplusOrDeficit.ConvertSurplusOrDeficit(),
            SchoolPFYRevenueStatusExplained = StagingApplyingSchoolData.SchoolPFYRevenueStatusExplained,
            SchoolCFYCapitalForward = StagingApplyingSchoolData.SchoolCFYCapitalForward,
            SchoolCFYCapitalForwardStatusExplained = StagingApplyingSchoolData.SchoolCFYCapitalForwardStatusExplained,
            SchoolCFYCapitalIsDeficit = StagingApplyingSchoolData.SchoolCFYCapitalSurplusOrDeficit.ConvertSurplusOrDeficit(),
            SchoolCFYEndDate = StagingApplyingSchoolData.SchoolCFYEndDate,
            SchoolCFYRevenue = StagingApplyingSchoolData.SchoolCFYRevenue,
            SchoolCFYRevenueIsDeficit = StagingApplyingSchoolData.SchoolCFYRevenueSurplusOrDeficit.ConvertSurplusOrDeficit(),
            SchoolCFYRevenueStatusExplained = StagingApplyingSchoolData.SchoolCFYRevenueStatusExplained,
            SchoolNFYCapitalForward = StagingApplyingSchoolData.SchoolNFYCapitalForward,
            SchoolNFYCapitalForwardStatusExplained = StagingApplyingSchoolData.SchoolNFYCapitalForwardStatusExplained,
            SchoolNFYCapitalIsDeficit = StagingApplyingSchoolData.SchoolNFYCapitalSurplusOrDeficit.ConvertSurplusOrDeficit(),
            SchoolNFYEndDate = StagingApplyingSchoolData.SchoolNFYEndDate,
            SchoolNFYRevenue = StagingApplyingSchoolData.SchoolNFYRevenue,
            SchoolNFYRevenueIsDeficit = StagingApplyingSchoolData.SchoolNFYRevenueSurplusOrDeficit.ConvertSurplusOrDeficit(),
            SchoolNFYRevenueStatusExplained = StagingApplyingSchoolData.SchoolNFYRevenueStatusExplained,
            SchoolPartOfFederation = StagingApplyingSchoolData.SchoolPartOfFederation.ConvertDynamicsIntBool(),
            SchoolSACREExemption = StagingApplyingSchoolData.SchoolSACREExemption.ConvertDynamicsIntBool(),
            SchoolSACREExemptionEndDate = StagingApplyingSchoolData.SchoolSACREExemptionEndDate,
            SchoolSupportedFoundation = StagingApplyingSchoolData.SchoolSupportedFoundation.ConvertDynamicsIntBool(),
            SchoolSupportedFoundationBodyName = StagingApplyingSchoolData.SchoolSupportedFoundationBodyName,
            SchoolSupportGrantFundsPaidTo = StagingApplyingSchoolData.SchoolSupportGrantFundsPaidTo.ConvertFundsPaidTo(),
            SchoolLeases = new List<A2BSchoolLease>(),
            SchoolLoans = new List<A2BSchoolLoan>(),
        };
}